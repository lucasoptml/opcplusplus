<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAEABAAoAQAANgAAABAQAAABAAgAaAUAAF4BAAAQEAAAAQAgAGgEAADGBgAAKAAAABAA
        AAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAIhwAAAAAAAAj/+IeHAAAACP////
        8AAAAI+IiP+AAAAA+MjH/4AAAACM+Px4gAAACMj2+MeAAAAI+IyI/IAAAAiOdo74gAAACI/3+IcAAAAI
        +Pj+jwAAAAj4iIj4AAAAD///j/gAAAAHiP//+AAAAAAAh4eHAAAAAAAAAAAAAPH/AADwBwAA8AcAAPAH
        AADwBwAA8AcAAOAHAADgBwAA4AcAAOAPAADgDwAA4A8AAOAPAADgDwAA/A8AAP//AAAoAAAAEAAAACAA
        AAABAAgAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAANguKwCjYB4ArG0tALd9PwDZPEcA20ZRAN1S
        XADhVEQA4FhVAOdkRwDlaVsA53VoAOJsdADmd3UAwo1SAPeWTwDFl2cAyp9xAO+HYgDqhXkAzaR2AKGh
        oQClpaUAqKioALCwsAC7u7sAvLy8AMyVigDJko0A3JGBAOyUigDTrYAA2raMAM2klgDfqZYA2LueAPar
        hADrn6kAxKqmAMu5rwDAv78A7KKsAO+vtADxtrUA8LS8APrBlwD9zp4A3cSrAPjFqgD+0qUA4cqyAOPN
        tgDm0rwA/tiwAMDAwADExMQAyMjIANHR0QDd2tgA3NzcAPXLygD718UA+93NAPfZ3QD94cwA/OHTAP7o
        0gDz6d4A/+/eAOjo6ADz6+IA9u3jAPzu7gD/8OIA//PmAPfx6gD58u4A9PT0APzy8wD69vEA//n0APj4
        +AD++PkA//7+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAZGBgAAAAAAAAAAAAAAAAAG///TjoY
        FxcXAAAAAAAAADf//////////wAAAAAAAAA5/y0mKkD//zwAAAAAAAAARisGDQUHT/83AAAAAAAAACwJ
        TTBJAQ49NwAAAAAAAB0MH0cC/xQLCCcAAAAAAAAeTTMkAzM1TQodAAAAAAAAI0QSEQQVIEcTIgAAAAAA
        ACg+QkwP/z8xJQAAAAAAAAA3US5PIf8QQTwAAAAAAAAAOv9KNkMvMv8bAAAAAAAAAP///1FFSv//GwAA
        AAAAAAAWGzz//////xsAAAAAAAAAAAAAFxcXGBgXAAAAAAAAAAAAAAAAAAAAAAAAAADx/wAA8AcAAPAH
        AADwBwAA8AcAAPAHAADgBwAA4AcAAOAHAADgDwAA4A8AAOAPAADgDwAA4A8AAPwPAAD//wAAKAAAABAA
        AAAgAAAAAQAgAAAAAABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpaWmGeXl5pWNj
        Y45KSkpvLCwsNAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApKSku///
        ////////9PT0/9DQ0P+mpqbvlJSU2IaGhr9xcXGqTk5OPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALS0
        tNX//////////////////////////////////////////1RUVFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAvExMTs/vj5//C0vP/rn6n/7KKs//fZ3f///////////9zc3PwAAAAXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfHx8x6Ojo/++vtP/bRlH/4mx0/9k8R//dUlz//PLz//////+8vLzgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAX1NTY/G2tf/gWFX/+vLu/93Eq//87u7/2C4r/+Z3df/1y8r/rq2txgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAK1YT6XndWj/7JSK//Pr4v+jYB7//////+qFef/laVv/4VRE/6+KhbkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADXgG3b+PPu/+HKsv/Yu57/rG0t/+PNtv/m0rz/+vPu/+dkR/+6bl65AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA256I4PPp3v/Kn3H/xZdn/7d9P//NpHb/062A//bt4//vh2L/rmxVnQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAL+pnc7718X//OHT//fx6v/CjVL///////vdzf/4xar/9quE/2JQ
        R2IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3t7fe//n0//rBl//69vH/2raM///9/P/3lk///eHM/93a
        2PwAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT0tLS9f//////8OL//tiw//7o0v/9zp7//tKl////
        /v+zs7PiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ0NDRfj4+P/////////////69P//797///Pm////
        /v//////qampxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUFyWlpbmurq6+dzc3P//////////////
        /////////////5ycnKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABs8PDxNS0tLgWRk
        ZJZ7e3uoi4uLwJeXl9Vra2uWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwPwAA8AMAAPADAADgAwAA4AcAAOAH
        AADgBwAA4AcAAOAHAADgBwAA4AcAAMAPAADADwAAwA8AAPAPAAD//wAA
</value>
  </data>
</root>